<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="PullBookMapper">
	<resultMap id="BaseResultMap" type="com.yxsd.kanshu.job.model.PullBook">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="copyright_code" property="copyrightCode" jdbcType="VARCHAR" />
		<result column="copyright_book_id" property="copyrightBookId" jdbcType="BIGINT" />
		<result column="pull_status" property="pullStatus" jdbcType="INTEGER" />
		<result column="pull_failure_cause" property="pullFailureCause" jdbcType="LONGVARCHAR" />
		<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
		<result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
	</resultMap>

	<sql id="Base_Where">
		<if test="id != null"> and pull_book_id= #{id}</if>
		<if test="copyrightCode != null and copyrightCode !=''"> and copyright_code= #{copyrightCode}</if>
		<if test="copyrightBookId != null"> and copyright_book_id= #{copyrightBookId}</if>
		<if test="pullStatus != null"> and pull_status= #{pullStatus}</if>
		<if test="pullFailureCause != null and pullFailureCause !=''"> and pull_failure_cause= #{pullFailureCause}</if>
		<if test="createDate != null"> and create_date= #{createDate}</if>
		<if test="updateDate != null"> and update_date= #{updateDate}</if>
	</sql>
	
	<sql id="Base_Column_List">
		id ,copyright_code ,copyright_book_id , pull_status , pull_failure_cause , create_date , update_date
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select <include refid="Base_Column_List" />
		from pull_book where id = #{id,jdbcType=BIGINT}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from pull_book where id = #{id,jdbcType=BIGINT}
	</delete>

	<insert id="insertSelective" parameterType="com.yxsd.kanshu.job.model.PullBook">
		insert into pull_book
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">id,</if>
			<if test="copyrightCode != null and copyrightCode !=''">copyright_code,</if>
			<if test="copyrightBookId != null">copyright_book_id,</if>
			<if test="pullStatus != null">pull_status,</if>	
			<if test="pullFailureCause != null and pullFailureCause !=''">pull_failure_cause,</if>
			<if test="createDate != null">create_date,</if>
			<if test="updateDate != null">update_date,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="copyrightCode != null and copyrightCode !=''">
				#{copyrightCode,jdbcType=VARCHAR},
			</if>
			<if test="copyrightBookId != null">
				#{copyrightBookId,jdbcType=BIGINT},
			</if>
			<if test="pullStatus != null">
				#{pullStatus,jdbcType=INTEGER},
			</if>
			<if test="pullFailureCause != null and pullFailureCause !=''">
				#{pullFailureCause,jdbcType=LONGVARCHAR},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="updateDate != null">
				#{updateDate,jdbcType=TIMESTAMP},
			</if>
			
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.yxsd.kanshu.job.model.PullBook">
		update pull_book
		<set>
			<if test="copyrightCode != null and copyrightCode !=''">
				copyright_code= #{copyrightCode,jdbcType=VARCHAR},
			</if>
			<if test="copyrightBookId != null">
				copyright_book_id= #{copyrightBookId,jdbcType=BIGINT},
			</if>
			<if test="pullStatus != null">
				pull_status= #{pullStatus,jdbcType=INTEGER},
			</if>
			<if test="pullFailureCause != null">
				pull_failure_cause= #{pullFailureCause,jdbcType=LONGVARCHAR},
			</if>
			<if test="createDate != null">
				create_date= #{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="updateDate != null">
				update_date= #{updateDate,jdbcType=TIMESTAMP}
			</if>
		</set>
		where
		id = #{id,jdbcType=BIGINT}
	</update>

	<select id="getAll" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from pull_book where 1=1
		<include refid="Base_Where" />
		<if test="copyrightBookIds != null"> 
			and copyright_book_id in 
			<foreach collection="copyrightBookIds" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
	</select>
	<select id="pageCount" resultType="java.lang.Integer" parameterType="map">
		select count(1) from pull_book where 1=1
		<include refid="Base_Where" />
	</select>
	<select id="pageData" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from pull_book where 1=1
		<include refid="Base_Where" />
	</select>


	<select id="selectByIds" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from pull_book where id in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>
	
	<select id="selectByCopyrightBookId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from pull_book where copyright_book_id in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>
	
	<!-- 批量添加 -->
	<insert id="insertBatch" parameterType="java.util.List">
		insert into pull_book(copyright_code,copyright_book_id,pull_status,pull_failure_cause,create_date,update_date)
		values 
		<foreach collection="list" index="index" item="item" separator=",">
			(#{item.copyrightCode},#{item.copyrightBookId},#{item.pullStatus},#{item.pullFailureCause},#{item.createDate},#{item.updateDate})
		</foreach>
	</insert>

</mapper>
